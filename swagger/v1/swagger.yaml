---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
# Sign_up
  "/api/v1/auth":
    post:
      summary: Sign Up
      tags:
      - Profile
      description: Creates a User from provided data
      operationId: createNewUser
      parameters: []
      responses:
        '200':
          description: User created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
    put:
      summary: Update Profile
      tags:
      - Profile
      description: Update user profile
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  name:
                    type: string
                  nickname:
                    type: string
                  personal_detail_attributes:
                      type: object
                      properties:
                        id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                        username:
                          type: string
                        dob:
                          type: date
                        county:
                          type: string
                        city:
                          type: string
                        gender:
                          type: string

# Sign_in
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Profile
      description: Sign-in a User from provided data. In response you will get access
        to the entire application.
      parameters: []
      responses:
        '200':
          description: User Sign-in
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  # App Users Spec
  "/api/v1/app_users":
    get:
      summary: Show All Users
      tags:
      - User
      description: Shows all of the existing users
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}

  "/api/v1/app_users/{id}":
    get:
      summary: Show User Profile
      tags:
      - User
      description: Show user profile by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Country Module
  "/api/v1/countries":
    get:
      summary: Show All countries
      tags:
      - Countries
      description: Info Related to All Countries
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Countries
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Country
      tags:
      - Countries
      description: "Creates a New Country"
      operationId: postCountryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Country Created
          content: {}
        '404':
          description: Country not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                comments:
                  type: text
                status:
                  type: string

  "/api/v1/countries/{id}":
    get:
      summary: Show country
      tags:
      - Countries
      description: Show a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a country
      tags:
      - Countries
      description: Update a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                comments:
                  type: text
                status:
                  type: string
    delete:
      summary: Delete country
      tags:
      - Countries
      description: Delete a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/countries/{id}":

  "/api/v1/countries.pdf":
    get:
      summary: pdf for countries
      tags:
      - Countries
      description: Info Related to All Countries
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Countries
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/countries.csv":
    get:
      summary: CSV for Countries
      tags:
      - Countries
      description: Info Related to All Countries
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Countries
          content: {}
        '422':
          description: invalid request
          content: {}

  #  City Module
  "/api/v1/cities":
    get:
      summary: Show All cities
      tags:
      - Cities
      description: Info Related to All Cities
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create City
      tags:
      - Cities
      description: "Creates a New City"
      operationId: postCityCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: City Created
          content: {}
        '404':
          description: City not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                comments:
                  type: text
                status:
                  type: string

  "/api/v1/cities/{id}":
    get:
      summary: Show city
      tags:
      - Cities
      description: Show a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a city
      tags:
      - Cities
      description: Update a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                comments:
                  type: text
                status:
                  type: string
    delete:
      summary: Delete city
      tags:
      - Cities
      description: Delete a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/cities/{id}":
  "/api/v1/all_cities":
    get:
      summary: Show All cities
      tags:
      - Cities
      description: Info Related to All Cities
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}

  "/api/v1/cities.pdf":
    get:
      summary: pdf for cities
      tags:
      - Cities
      description: pdf for All Cities
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/cities.csv":
    get:
      summary: CSV for cities
      tags:
      - Cities
      description: CSV for All Cities
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Role Module
  "/api/v1/roles":
    get:
      summary: Show All roles
      tags:
      - Roles
      description: Info Related to All Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Roles
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Role
      tags:
      - Roles
      description: "Creates a New Role"
      operationId: postRoleCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: City Created
          content: {}
        '404':
          description: City not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                resource_type:
                  type: string
                resource_id:
                  type: integer
                status:
                  type: string

  "/api/v1/roles/{id}":
    get:
      summary: Show Role
      tags:
      - Roles
      description: Show a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a role
      tags:
      - Roles
      description: Update a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                resource_type:
                  type: string
                resource_id:
                  type: integer
                status:
                  type: string
    delete:
      summary: Delete role
      tags:
      - Roles
      description: Delete a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/roles/{id}":

  "/api/v1/roles.pdf":
    get:
      summary: pdf for roles
      tags:
      - Roles
      description: pdf for All Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Roles
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/roles.csv":
    get:
      summary: CSV for roles
      tags:
      - Roles
      description: CSV for All Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Roles
          content: {}
        '422':
          description: invalid request
          content: {}
  #  Users Roles
  "/api/v1/users_roles":
    get:
      summary: Show All Users Roles
      tags:
      - Users Roles
      description: Info Related to All Users Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Users Roles
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Users Role
      tags:
      - Users Roles
      description: "Creates a New Users Role"
      operationId: postRoleCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Users Role Created
          content: {}
        '404':
          description: Users Role not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                role_id:
                  type: integer

  "/api/v1/users_roles/{id}":
    get:
      summary: Show Users Role
      tags:
      - Users Roles
      description: Show a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Users role
      tags:
      - Users Roles
      description: Update a Users role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                role_id:
                  type: integer
    delete:
      summary: Delete Users role
      tags:
      - Users Roles
      description: Delete a Users role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/users_roles/{id}":

  #  Product Categories
  "/api/v1/product_categories":
    get:
      summary: Show All Product Categories
      tags:
      - Product Categories
      description: Info Related to All Product Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category
      tags:
      - Product Categories
      description: "Creates a New Product Category"
      operationId: postProductCategoryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Category Created
          content: {}
        '404':
          description: Product Category not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string

  "/api/v1/product_categories/{id}":
    get:
      summary: Show Product Category
      tags:
      - Product Categories
      description: Show Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category
      tags:
      - Product Categories
      description: Update Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string
    delete:
      summary: Delete Product Category
      tags:
      - Product Categories
      description: Delete Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_categories/{id}":
  "/api/v1/categories_list":
    get:
      summary: Show All Product Categories
      tags:
      - Product Categories
      description: Info Related to All Product Categories associations
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}

  "/api/v1/product_categories.pdf":
    get:
      summary: pdf for Product Categories
      tags:
      - Product Categories
      description: pdf for All Product Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/product_categories.csv":
    get:
      summary: CSV for Product Categories
      tags:
      - Product Categories
      description: CSV for All Product Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Product Category Heads
  "/api/v1/product_category_heads":
    get:
      summary: Show All Product Category Heads
      tags:
      - Product Category Heads
      description: Info Related to All Product Category Heads
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Category Heads
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category Head
      tags:
      - Product Category Heads
      description: "Creates a New Product Category Head"
      operationId: postProductCategoryHeadCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Category Head Created
          content: {}
        '404':
          description: Product Category Head not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                product_category_id:
                  type: integer
                link:
                  type: string
                icon:
                  type: string

  "/api/v1/product_category_heads/{id}":
    get:
      summary: Show Product Category Head
      tags:
      - Product Category Heads
      description: Show Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category Head
      tags:
      - Product Category Heads
      description: Update Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: json
                description:
                  type: text
                status:
                  type: string
                product_category_id:
                  type: integer
                link:
                  type: string
                icon:
                  type: string
    delete:
      summary: Delete Product Category Head
      tags:
      - Product Category Heads
      description: Delete Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_category_heads/{id}":

  "/api/v1/product_category_heads.pdf":
    get:
      summary: pdf for Product Category Heads
      tags:
      - Product Category Heads
      description: pdf for All Product Category Heads
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Category Heads
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/product_category_heads.csv":
    get:
      summary: CSV for Product Category Heads
      tags:
      - Product Category Heads
      description: CSV for All Product Category Heads
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Category Heads
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Product Sub Categories
  "/api/v1/product_sub_categories":
    get:
      summary: Show All Product Sub Categories
      tags:
      - Product Sub Categories
      description: Info Related to All Product Sub Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Sub Categories
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category
      tags:
      - Product Sub Categories
      description: "Creates a New Product Sub Category"
      operationId: postProductSubCategoryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Sub Category Created
          content: {}
        '404':
          description: Product Sub Category not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: json
                description:
                  type: text
                status:
                  type: string
                product_category_head_id:
                  type: integer
                link:
                  type: string
                icon:
                  type: string

  "/api/v1/product_sub_categories/{id}":
    get:
      summary: Show Product Sub Category
      tags:
      - Product Sub Categories
      description: Show Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category
      tags:
      - Product Sub Categories
      description: Update Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: json
                description:
                  type: text
                status:
                  type: string
                product_category_head_id:
                  type: integer
                link:
                  type: string
                icon:
                  type: string
    delete:
      summary: Delete Product Sub Category
      tags:
      - Product Sub Categories
      description: Delete Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_sub_categories/{id}":

  "/api/v1/product_sub_categories.pdf":
    get:
      summary: pdf for Product Sub Categories
      tags:
      - Product Sub Categories
      description: pdf for All Product Sub Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Sub Categories
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/product_sub_categories.csv":
    get:
      summary: CSV for Product Sub Categories
      tags:
      - Product Sub Categories
      description: CSV for All Product Sub Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Sub Categories
          content: {}
        '422':
          description: invalid request
          content: {}

#  Category Brands
  "/api/v1/category_brands":
    get:
      summary: Show All Category Brands
      tags:
      - Category Brands
      description: Info Related to All Category brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Category Brands
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Category Brands
      tags:
      - Category Brands
      description: "Creates a New Category Brands"
      operationId: postCategoryBrandsCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Category Brand Created
          content: {}
        '404':
          description: Category Brand not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: text
                product_category_id:
                  type: string

  "/api/v1/category_brands/{id}":
    get:
      summary: Show Category Brand
      tags:
      - Category Brands
      description: Show Category Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Category Brand
      tags:
      - Category Brands
      description: Update Category Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: text
                product_category_id:
                  type: string
    delete:
      summary: Delete Category Brand
      tags:
      - Category Brands
      description: Delete Category Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/category_brands/{id}":

  "/api/v1/category_brands.pdf":
    get:
      summary: pdf for Category Brands
      tags:
      - Category Brands
      description: pdf for All Category brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Category Brands
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/category_brands.csv":
    get:
      summary: CSV for Category Brands
      tags:
      - Category Brands
      description: CSV for All Category brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Category Brands
          content: {}
        '422':
          description: invalid request
          content: {}
# Products
  "/api/v1/products":
    get:
      summary: Show All Products
      tags:
      - Products
      description: Info Related to All Products
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Products
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Products
      tags:
      - Products
      description: "Creates a New Products"
      operationId: postProductsCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Created
          content: {}
        '404':
          description: Product not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                price:
                  type: float
                location:
                  type: string
                link:
                  types: string
                extra_fields:
                  type: json
                product_type:
                  types: string
                brand_id:
                  type: integer
                featured:
                  type: boolean
                city:
                  types: string

  "/api/v1/products/{id}":
    get:
      summary: Show Product
      tags:
      - Products
      description: Show Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product
      tags:
      - Products
      description: Update Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                price:
                  type: float
                location:
                  type: string
                link:
                  types: string
                extra_fields:
                  type: json
                product_type:
                  types: string
                brand_id:
                  type: integer
                featured:
                  type: boolean
                city:
                  types: string
    delete:
      summary: Delete Product
      tags:
      - Products
      description: Delete Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/products/{id}":

  "/api/v1/products.pdf":
    get:
      summary: pdf for Products
      tags:
      - Products
      description: pdf for All Products
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Products
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/products.csv":
    get:
      summary: CSV for Products
      tags:
      - Products
      description: CSV for All Products
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Products
          content: {}
        '422':
          description: invalid request
          content: {}
  # Language
  "/api/v1/languages":
    get:
      summary: Show All languages
      tags:
      - Languages
      description: Info Related to All languages
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All languages
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create language
      tags:
      - Languages
      description: "Creates a New language"
      operationId: postLanguageCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: language Created
          content: {}
        '404':
          description: language not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: text
                status:
                  type: string

  "/api/v1/languages/{id}":
    get:
      summary: Show Language
      tags:
      - Languages
      description: Show Language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Language
      tags:
      - Languages
      description: Update language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: text
                status:
                  type: string
    delete:
      summary: Delete language
      tags:
      - Languages
      description: Delete Language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/languages/{id}":

  "/api/v1/languages.pdf":
    get:
      summary: pdf for languages
      tags:
      - Languages
      description: pdf for All languages
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All languages
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/languages.csv":
    get:
      summary: CSV for languages
      tags:
      - Languages
      description: CSV for All languages
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All languages
          content: {}
        '422':
          description: invalid request
          content: {}

 # Brand
  "/api/v1/brands":
    get:
      summary: Show All brands
      tags:
      - Brands
      description: Info Related to All brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All languages
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create brand
      tags:
      - Brands
      description: "Creates a New brand"
      operationId: postbrandCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: brand Created
          content: {}
        '404':
          description: brand not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string

  "/api/v1/brands/{id}":
    get:
      summary: Show Brand
      tags:
      - Brands
      description: Show Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Brand
      tags:
      - Brands
      description: Update Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string
    delete:
      summary: Delete brand
      tags:
      - Brands
      description: Delete Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/brands/{id}":

  "/api/v1/brands.pdf":
    get:
      summary: pdf for brands
      tags:
      - Brands
      description: pdf for All brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All brands
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/brands.csv":
    get:
      summary: CSV for brands
      tags:
      - Brands
      description: CSV for All brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All brands
          content: {}
        '422':
          description: invalid request
          content: {}

  # Model
  "/api/v1/models":
    get:
      summary: Show All models
      tags:
      - Models
      description: Info Related to All models
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All models
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create model
      tags:
      - Models
      description: "Creates a New model"
      operationId: postmodelCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: model Created
          content: {}
        '404':
          description: model not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string
                product_id:
                  type: integer

  "/api/v1/models/{id}":
    get:
      summary: Show model
      tags:
      - Models
      description: Show model by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a model
      tags:
      - Models
      description: Update model by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string
                product_id:
                  type: integer
    delete:
      summary: Delete model
      tags:
      - Models
      description: Delete model by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/models/{id}":

  "/api/v1/models.pdf":
    get:
      summary: pdf for models
      tags:
      - Models
      description: pdf for All models
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All models
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/models.csv":
    get:
      summary: CSV for models
      tags:
      - Models
      description: CSV for All models
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All models
          content: {}
        '422':
          description: invalid request
          content: {}

  # Budget
  "/api/v1/budgets":
    get:
      summary: Show All budgets
      tags:
      - Budgets
      description: Info Related to All budgets
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All budgets
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create budget
      tags:
      - Budgets
      description: "Creates a New budget"
      operationId: postBudgetCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: budget Created
          content: {}
        '404':
          description: budget not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string

  "/api/v1/budgets/{id}":
    get:
      summary: Show budget
      tags:
      - Budgets
      description: Show budget by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a model
      tags:
      - Budgets
      description: Update budget by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: text
                status:
                  type: string
                link:
                  type: string
                icon:
                  type: string
    delete:
      summary: Delete budget
      tags:
      - Budgets
      description: Delete budget by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/models/{id}":

  "/api/v1/budgets.pdf":
    get:
      summary: pdf for budget
      tags:
      - Budgets
      description: pdf for All budgets
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All budgets
          content: {}
        '422':
          description: invalid request
          content: {}
  "/api/v1/budgets.csv":
    get:
      summary: CSV for budgets
      tags:
      - Budgets
      description: CSV for All budgets
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All budgets
          content: {}
        '422':
          description: invalid request
          content: {}
servers:
- url: https://portal.tractoronline.com.pk/
- url: http://localhost:4000
