---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
# Sign_up
  "/api/v1/auth":
    post:
      summary: Sign Up
      tags:
      - Profile
      description: Creates a User from provided data
      operationId: createNewUser
      parameters: []
      responses:
        '200':
          description: User created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
    put:
      summary: Update Profile
      tags:
      - Profile
      description: Update user profile
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                  name:
                    type: string
                  nickname:
                    type: string
                  personal_detail_attributes:
                      type: object
                      properties:
                        id:
                          type: integer
                        first_name:
                          type: string
                        last_name:
                          type: string
                        username:
                          type: string
                        dob:
                          type: date
                        county:
                          type: string
                        city:
                          type: string
                        gender:
                          type: string

# Sign_in
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Profile
      description: Sign-in a User from provided data. In response you will get access
        to the entire application.
      parameters: []
      responses:
        '200':
          description: User Sign-in
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  # App Users Spec
  "/api/v1/app_users":
    get:
      summary: Show All Users
      tags:
      - User
      description: Shows all of the existing users
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}

  "/api/v1/app_users/{id}":
    get:
      summary: Show User Profile
      tags:
      - User
      description: Show user profile by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Country Module
  "/api/v1/countries":
    get:
      summary: Show All countries
      tags:
      - Countries
      description: Info Related to All Countries
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Countries
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Country
      tags:
      - Countries
      description: "Creates a New Country"
      operationId: postCountryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Country Created
          content: {}
        '404':
          description: Country not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: object
                  properties:
                    title:
                      type: string
                    comments:
                      type: text
                    status:
                      type: string

  "/api/v1/countries/{id}":
    get:
      summary: Show country
      tags:
      - Countries
      description: Show a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a country
      tags:
      - Countries
      description: Update a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country:
                  type: object
                  properties:
                    title:
                      type: string
                    comments:
                      type: text
                    status:
                      type: string
    delete:
      summary: Delete country
      tags:
      - Countries
      description: Delete a country by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/countries/{id}":

  #  City Module
  "/api/v1/cities":
    get:
      summary: Show All cities
      tags:
      - Cities
      description: Info Related to All Cities
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create City
      tags:
      - Cities
      description: "Creates a New City"
      operationId: postCityCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: City Created
          content: {}
        '404':
          description: City not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: object
                  properties:
                    title:
                      type: string
                    comments:
                      type: text
                    status:
                      type: string

  "/api/v1/cities/{id}":
    get:
      summary: Show city
      tags:
      - Cities
      description: Show a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a city
      tags:
      - Cities
      description: Update a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: object
                  properties:
                    title:
                      type: string
                    comments:
                      type: text
                    status:
                      type: string
    delete:
      summary: Delete city
      tags:
      - Cities
      description: Delete a city by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/cities/{id}":
  "/api/v1/all_cities":
    get:
      summary: Show All cities
      tags:
      - Cities
      description: Info Related to All Cities
      responses:
        '200':
          description: All Cities
          content: {}
        '422':
          description: invalid request
          content: {}

  #  Role Module
  "/api/v1/roles":
    get:
      summary: Show All roles
      tags:
      - Roles
      description: Info Related to All Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Roles
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Role
      tags:
      - Roles
      description: "Creates a New Role"
      operationId: postRoleCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: City Created
          content: {}
        '404':
          description: City not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: object
                  properties:
                    title:
                      type: string
                    resource_type:
                      type: string
                    resource_id:
                      type: integer
                    status:
                      type: string

  "/api/v1/roles/{id}":
    get:
      summary: Show Role
      tags:
      - Roles
      description: Show a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a role
      tags:
      - Roles
      description: Update a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: object
                  properties:
                    title:
                      type: string
                    resource_type:
                      type: string
                    resource_id:
                      type: integer
                    status:
                      type: string
    delete:
      summary: Delete role
      tags:
      - Roles
      description: Delete a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/roles/{id}":

  #  Users Roles
  "/api/v1/users_roles":
    get:
      summary: Show All Users Roles
      tags:
      - Users Roles
      description: Info Related to All Users Roles
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Users Roles
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Users Role
      tags:
      - Users Roles
      description: "Creates a New Users Role"
      operationId: postRoleCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Users Role Created
          content: {}
        '404':
          description: Users Role not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                users_role:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    role_id:
                      type: integer

  "/api/v1/users_roles/{id}":
    get:
      summary: Show Users Role
      tags:
      - Users Roles
      description: Show a role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Users role
      tags:
      - Users Roles
      description: Update a Users role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                users_role:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    role_id:
                      type: integer
    delete:
      summary: Delete Users role
      tags:
      - Users Roles
      description: Delete a Users role by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/users_roles/{id}":

  #  Product Categories
  "/api/v1/product_categories":
    get:
      summary: Show All Product Categories
      tags:
      - Product Categories
      description: Info Related to All Product Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category
      tags:
      - Product Categories
      description: "Creates a New Product Category"
      operationId: postProductCategoryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Category Created
          content: {}
        '404':
          description: Product Category not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_category:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    link:
                      type: string

  "/api/v1/product_categories/{id}":
    get:
      summary: Show Product Category
      tags:
      - Product Categories
      description: Show Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category
      tags:
      - Product Categories
      description: Update Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_category:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    link:
                      type: string
    delete:
      summary: Delete Product Category
      tags:
      - Product Categories
      description: Delete Product Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_categories/{id}":
  "/api/v1/product_categories/categories_list":
    get:
      summary: Show All Product Categories
      tags:
      - Product Categories
      description: Info Related to All Product Categories associations
      responses:
        '200':
          description: All Product Categories
          content: {}
        '422':
          description: invalid request
          content: {}


  #  Product Category Heads
  "/api/v1/product_category_heads":
    get:
      summary: Show All Product Category Heads
      tags:
      - Product Category Heads
      description: Info Related to All Product Category Heads
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Category Heads
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category Head
      tags:
      - Product Category Heads
      description: "Creates a New Product Category Head"
      operationId: postProductCategoryHeadCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Category Head Created
          content: {}
        '404':
          description: Product Category Head not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_category_head:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    product_category_id:
                      type: integer
                    link:
                      type: string

  "/api/v1/product_category_heads/{id}":
    get:
      summary: Show Product Category Head
      tags:
      - Product Category Heads
      description: Show Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category Head
      tags:
      - Product Category Heads
      description: Update Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_category_head:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    product_category_id:
                      type: integer
                    link:
                      type: string
    delete:
      summary: Delete Product Category Head
      tags:
      - Product Category Heads
      description: Delete Product Category Head by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_category_heads/{id}":


  #  Product Sub Categories
  "/api/v1/product_sub_categories":
    get:
      summary: Show All Product Sub Categories
      tags:
      - Product Sub Categories
      description: Info Related to All Product Sub Categories
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Sub Categories
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Category
      tags:
      - Product Sub Categories
      description: "Creates a New Product Sub Category"
      operationId: postProductSubCategoryCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Sub Category Created
          content: {}
        '404':
          description: Product Sub Category not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_sub_category:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    product_category_head_id:
                      type: integer
                    link:
                      type: string

  "/api/v1/product_sub_categories/{id}":
    get:
      summary: Show Product Sub Category
      tags:
      - Product Sub Categories
      description: Show Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Category
      tags:
      - Product Sub Categories
      description: Update Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_sub_category:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
                    product_category_head_id:
                      type: integer
                    link:
                      type: string
    delete:
      summary: Delete Product Sub Category
      tags:
      - Product Sub Categories
      description: Delete Product Sub Category by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/product_sub_categories/{id}":

#  Product Brands
  "/api/v1/product_brands":
    get:
      summary: Show All Product Brands
      tags:
      - Product Brands
      description: Info Related to All Product brands
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Product Brands
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Product Brands
      tags:
      - Product Brands
      description: "Creates a New Product Brands"
      operationId: postProductBrandsCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Brand Created
          content: {}
        '404':
          description: Product Brand not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_brand:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string

  "/api/v1/product_brands/{id}":
    get:
      summary: Show Product Brand
      tags:
      - Product Brands
      description: Show Product Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product Brand
      tags:
      - Product Brands
      description: Update Product Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_brand:
                  type: object
                  properties:
                    title:
                      type: string
                    image:
                      type: json
                    description:
                      type: text
                    status:
                      type: string
    delete:
      summary: Delete Product Brand
      tags:
      - Product Brands
      description: Delete Product Brand by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/products_brands/{id}":
# Products
  "/api/v1/products":
    get:
      summary: Show All Products
      tags:
      - Products
      description: Info Related to All Products
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All Products
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create Products
      tags:
      - Products
      description: "Creates a New Products"
      operationId: postProductsCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: Product Created
          content: {}
        '404':
          description: Product not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: text
                    status:
                      type: string
                    price:
                      type: float
                    location:
                      type: string
                    link:
                      types: string
                    extra_fields:
                      type: json
                    image:
                      type: json

  "/api/v1/products/{id}":
    get:
      summary: Show Product
      tags:
      - Products
      description: Show Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Product
      tags:
      - Products
      description: Update Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: text
                    status:
                      type: string
                    price:
                      type: float
                    location:
                      type: string
                    link:
                      types: string
                    extra_fields:
                      type: json
                    image:
                      type: json
    delete:
      summary: Delete Product
      tags:
      - Products
      description: Delete Product by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/products/{id}":

  # Language
  "/api/v1/languages":
    get:
      summary: Show All languages
      tags:
      - Languages
      description: Info Related to All languages
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: All languages
          content: {}
        '422':
          description: invalid request
          content: {}
    post:
      summary: Create language
      tags:
      - Languages
      description: "Creates a New language"
      operationId: postLanguageCreation
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      responses:
        '200':
          description: language Created
          content: {}
        '404':
          description: language not created
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: text
                    status:
                      type: string

  "/api/v1/languages/{id}":
    get:
      summary: Show Language
      tags:
      - Languages
      description: Show Language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
    put:
      summary: Update a Language
      tags:
      - Languages
      description: Update language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: text
                    status:
                      type: string
    delete:
      summary: Delete language
      tags:
      - Languages
      description: Delete Language by giving its id
      parameters:
      - name: access-token
        in: header
        schema:
          type: string
      - name: client
        in: header
        schema:
          type: string
      - name: uid
        in: header
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content: {}
        '422':
          description: invalid request
          content: {}
          "/api/v1/languages/{id}":
servers:
- url: https://portal.tractoronline.com.pk/
- url: http://localhost:4000
