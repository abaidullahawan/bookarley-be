<nav class="navbar navbar-light bg-white shadow py-4" style="position: fixed; z-index: 1; width: 100%;">
  <div class="container-fluid">
    <div class="ml-auto d-flex justify-content-center">
      <button id="add-text-btn" class="button-border" style="margin-right: 25px;">
        <%= image_tag("add_text.png", alt: "Logo", width: 15, style:"margin-right: 5px;") %>
        <span class="h5 pt-3">Add Text</span>
      </button>
      <div style="margin-right: 25px; margin-top: 4px;">
        <select id="font-select" class="form-control py-2 pr-5">
          <option value="Arial">Arial</option>
          <option value="Helvetica">Helvetica</option>
          <option value="Times New Roman">Times New Roman</option>
          <option value="monoscape">Tangerine</option>
          <option value="Verdana">Verdana</option>
          <option value="Georgia">Georgia</option>
          <option value="Courier New">Courier New</option>
          <option value="Garamond">Garamond</option>
          <option value="Comic Sans MS">Comic Sans MS</option>
          <option value="Arial Black">Arial Black</option>
          <option value="Impact">Impact</option>
          <option value="Palatino Linotype">Palatino Linotype</option>
          <option value="Lucida Sans Unicode">Lucida Sans Unicode</option>
        </select>

      </div>
      <input type="color" id="color-picker" style="margin-right: 25px; margin-top: 4px;">
      <button id="bold-btn" class="button-border">
        <%= image_tag("bold_font.png", alt: "Logo", width: 17, style:"margin-right: 3px;") %>
      </button>
      <button id="italic-btn" class="button-border">
        <%= image_tag("italic_font.png", alt: "Logo", width: 17, style:"margin-right: 3px;") %>
      </button>

      <button id="underline-btn" class="button-border">
        <%= image_tag("underline_font.png", alt: "Logo", width: 26, style:"margin-right: 3px; margin-top: 2.5px;") %>
      </button>

      <button id="align-left-btn" class="button-border">
        <%= image_tag("align-left.png", alt: "Logo", width: 24, style:"margin-right: 3px; margin-top: 1.5px;") %>
      </button>

      <button id="align-center-btn" class="button-border">
        <%= image_tag("align-center.png", alt: "Logo", width: 28.5, style:"margin-right: 3px; margin-top: 1.5px;") %>
      </button>

      <button id="align-right-btn" class="button-border">
        <%= image_tag("align-right.png", alt: "Logo", width: 24, style:"margin-right: 3px; margin-top: 1.5px;") %>
      </button>

      <button id="delete-btn" class="button-border">
        <%= image_tag("delete-icon.png", alt: "Logo", width: 22, style:"margin-right: 3px; margin-top: 1.5px;") %>
      </button>

      <div class="d-flex align-items-center" style="margin-right: 15px;">
        <p class="slider-label">Letter Spacing:</p>
        <input
          type="range"
          id="letter-spacing-slider"
          min="-100"
          max="100"
          value="0"
          step="1"
        />
      </div>

      <div class="d-flex align-items-center" style="margin-right: 15px;">
        <p class="slider-label">Opacity:</p>
        <input
          type="range"
          id="opacity-slider"
          min="0"
          max="1"
          value="1"
          step="0.01"
        />
      </div>
      <div style="margin-top: 6px;">
        <a class="download-btn shadow-sm" id="download-link">Download</a>
      </div>
      <div>
        <button class="save-btn" id="save-template-btn">Save</button>
      </div>
      
    </div>
  </div>
</nav>

<div>
  <div class="d-flex justify-content-center align-items-center">
    <div class="d-flex justify-content-center card-margin" style="width: 90%;">
      <div class="w-50">
        <div class="card shadow w-100 px-2 pt-4" style="border-left: 5px solid orange; border-radius: 5px;">
          <div class="d-flex justify-content-center">
            <div class="invite-title">
              <h1>Invitation Cards</h1>
            </div>
          </div>

          <div id="replica-inputs" class="input-fields-section"></div>

          <div class="card-footer d-flex justify-content-end bg-white py-3">
            <a href="/invitation_cards" class="btn btn-secondary btn-lg" style="margin-right: 6px;">
                <i class="fas fa-undo"></i> Back
            </a>
            <button id="reset-btn" class="btn btn-danger btn-lg">
                <i class="fas fa-sync-alt"></i> Reset
            </button>
          </div>
        </div>
      </div>
      <div class="w-50" style="padding-left: 100px;">
        <canvas id="fabric-canvas" width="300" height="420" class="shadow-lg"></canvas>
      </div>
    </div>
  </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.5.0/fabric.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    var canvas = new fabric.Canvas("fabric-canvas");
    var replicaInputs = document.getElementById("replica-inputs");

    var originalImageURL = "<%= root_url + url_for(@invitation_card.image) %>";
    var templateData = <%= @invitation_card.canvas_data.to_json.html_safe %>;
    var initialCanvasData = null;

    fabric.Image.fromURL(originalImageURL, function (img) {
      if (templateData) {
        canvas.loadFromJSON(templateData, function () {
          canvas.renderAll();
          canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {
            scaleX: canvas.width / img.width,
            scaleY: canvas.height / img.height
          });
        });
      } else {
        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {
          scaleX: canvas.width / img.width,
          scaleY: canvas.height / img.height
        });
      }
    });

    document.getElementById("add-text-btn").addEventListener("click", function () {
      var text = new fabric.Textbox("Enter text here", {
        left: 50,
        top: 50,
        width: 150,
        fontSize: 20,
        fontFamily: "Arial",
        fill: "black"
      });

      canvas.add(text);
    });

    document.getElementById("font-select").addEventListener("change", function () {
      var selectedFont = this.value;
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        activeObject.set("fontFamily", selectedFont);
        canvas.renderAll();
      }
    });

    document.getElementById("color-picker").addEventListener("input", function () {
      var selectedColor = this.value;
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        activeObject.set("fill", selectedColor);
        canvas.renderAll();
      }
    });

    document.getElementById("bold-btn").addEventListener("click", function () {
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        var fontWeight = activeObject.fontWeight === "bold" ? "normal" : "bold";
        activeObject.set("fontWeight", fontWeight);
        canvas.renderAll();
      }
    });

    document.getElementById("italic-btn").addEventListener("click", function () {
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        var fontStyle = activeObject.fontStyle === "italic" ? "normal" : "italic";
        activeObject.set("fontStyle", fontStyle);
        canvas.renderAll();
      }
    });

    document.getElementById("underline-btn").addEventListener("click", function () {
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        var fontStyle = activeObject.underline === true ? false : true;
        activeObject.set("underline", fontStyle);
        canvas.renderAll();
      }
    });

    document.getElementById("letter-spacing-slider").addEventListener("input", function () {
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        var letterSpacing = parseInt(this.value);
        activeObject.set("charSpacing", letterSpacing);
        canvas.renderAll();
      }
    });

    document.getElementById("opacity-slider").addEventListener("input", function () {
      var activeObject = canvas.getActiveObject();

      if (activeObject && activeObject.type === "textbox") {
        var opacity = parseFloat(this.value);
        activeObject.set("opacity", opacity);
        canvas.renderAll();
      }
    });

    document.getElementById("align-left-btn").addEventListener("click", function () {
      alignTextBox("left");
    });

    document.getElementById("align-center-btn").addEventListener("click", function () {
      alignTextBox("center");
    });

    document.getElementById("align-right-btn").addEventListener("click", function () {
      alignTextBox("right");
    });

    function alignTextBox(alignment) {
      var activeObject = canvas.getActiveObject();
      
      if (activeObject && activeObject.type === "textbox") {
        var canvasWidth = canvas.width;
        var textBoxWidth = activeObject.getScaledWidth();
        
        if (alignment === "left") {
          activeObject.set({ left: 0, textAlign: "left" });
        } else if (alignment === "center") {
          activeObject.set({ left: (canvasWidth - textBoxWidth) / 2, textAlign: "center" });
        } else if (alignment === "right") {
          activeObject.set({ left: canvasWidth - textBoxWidth, textAlign: "right" });
        }
        
        canvas.renderAll();
      }
    }

    canvas.on("selection:created", function (e) {
      var activeObject = e.target;
      if (activeObject && activeObject.type === "textbox") {
        document.getElementById("font-select").value = activeObject.fontFamily;
        document.getElementById("color-picker").value = activeObject.fill;
      }
    });

    document.getElementById("delete-btn").addEventListener("click", function () {
      var activeObject = canvas.getActiveObject();
      if (activeObject && activeObject.type === "textbox") {
        canvas.remove(activeObject);
      }
    });

    document.getElementById("download-link").addEventListener("click", function () {
      var imageDataURL = canvas.toDataURL({
        format: "png",
        quality: 1
      });

      var downloadLink = document.getElementById("download-link");
      downloadLink.href = imageDataURL;
      downloadLink.download = "<%= @invitation_card.card_name%>.png";

    });

    function updateReplicaInputs() {
      replicaInputs.innerHTML = "";

      canvas.forEachObject(function (obj) {
        if (obj.type === "textbox") {
          var replicaInput = document.createElement("input");
          replicaInput.type = "text";
          replicaInput.className = "replica-input mb-2";
          replicaInput.value = obj.text;
          
          replicaInput.addEventListener("input", function () {
            obj.text = this.value;
            canvas.renderAll();
          });

          replicaInputs.appendChild(replicaInput);
        }
      });
    }

    updateReplicaInputs();

    document.getElementById("save-template-btn").addEventListener("click", function () {
      var canvasData = JSON.stringify(canvas.toJSON());

      fetch('/invitation_cards/<%= @invitation_card.id %>/save_template', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': '<%= form_authenticity_token %>'
        },
        body: JSON.stringify({ canvas_data: canvasData })
      })
      .then(response => {
        console.log('Template saved successfully');
      })
      .catch(error => {
        console.error('Error saving template:', error);
      });
    });

    canvas.on("object:added", updateReplicaInputs);
    canvas.on("object:removed", updateReplicaInputs);
    canvas.on("object:modified", updateReplicaInputs);

    function resetCanvas() {
      var originalImageURL = "<%= root_url + url_for(@invitation_card.image) %>";
      var templateData = <%= @invitation_card.canvas_data.to_json.html_safe %>;

      fabric.Image.fromURL(originalImageURL, function (img) {
        canvas.clear(); // Clear existing objects
        canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas), {
          scaleX: canvas.width / img.width,
          scaleY: canvas.height / img.height
        });

        if (templateData) {
          canvas.loadFromJSON(templateData, function () {
            canvas.renderAll();
          });
        }
      });
    }

    document.getElementById("reset-btn").addEventListener("click", function () {
      resetCanvas();
    });

  });
</script>
